
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: jobs.dope.metacontroller.io
spec:
  group: dope.metacontroller.io
  names:
    kind: Job
    listKind: JobList
    plural: jobs
    singular: job
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Job is a kubernetes custom resource that defines the specifications
        to invoke kubernetes operations against any kubernetes custom resource
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: JobSpec defines the tasks that get executed as part of executing
            this Job
          properties:
            eligible:
              description: Eligible defines the eligibility criteria to grant a Job
                to get executed
              properties:
                checks:
                  items:
                    description: EligibleItem defines the eligibility criteria to
                      grant a Job to get executed
                    properties:
                      apiVersion:
                        type: string
                      count:
                        type: integer
                      id:
                        type: string
                      kind:
                        type: string
                      labelSelector:
                        description: A label selector is a label query over a set
                          of resources. The result of matchLabels and matchExpressions
                          are ANDed. An empty label selector matches all objects.
                          A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      when:
                        description: EligibleItemRule defines the eligibility criteria
                          to grant a Job to get executed
                        type: string
                    type: object
                  type: array
                when:
                  description: EligibleRule defines the eligibility criteria to grant
                    a Job to get executed
                  type: string
              required:
              - checks
              type: object
            enabled:
              description: Enabled defines if the job is enabled to be executed or
                not
              properties:
                when:
                  description: Condition to enable or disable this Job
                  type: string
              type: object
            refresh:
              description: Refresh options to reconcile Job
              properties:
                onErrorResyncAfterSeconds: {}
                resyncAfterSeconds: {}
              type: object
            tasks:
              items:
                description: "Task that needs to be executed as part of a Job \n Task
                  forms the fundamental unit of execution within a Job"
                properties:
                  apply:
                    description: Apply represents the desired state that needs to
                      be applied against the cluster
                    properties:
                      replicas:
                        description: "Desired count that needs to be created \n NOTE:
                          \tIf value is 0 then this state needs to be deleted"
                        type: integer
                      state:
                        description: Desired state that needs to be created or updated
                          or deleted. Resource gets created if this state is not observed
                          in the cluster. However, if this state is found in the cluster,
                          then the corresponding resource gets updated via a 3-way
                          merge.
                        type: object
                      targets:
                        description: "Resources that needs to be **updated** with
                          above desired state \n NOTE: \tPresence of Targets implies
                          an update operation"
                        properties:
                          selectorTerms:
                            description: A list of selector terms. This list of terms
                              are ORed.
                            items:
                              description: A SelectorTerm is a query over various
                                match representations. The result of match(-es) are
                                ANDed.
                              properties:
                                matchAnnotationExpressions:
                                  description: "MatchAnnotationExpressions is a list
                                    of label selector requirements. The requirements
                                    are ANDed. \n The key as well value is matched
                                    against the target's annotations. \n This is optional"
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchAnnotations:
                                  additionalProperties:
                                    type: string
                                  description: "MatchAnnotations is a map of {key,value}
                                    pairs that is matched against the target's annotations.
                                    \n A single {key, value} pair in the MatchAnnotations
                                    map is equivalent to one element in MatchAnnotationExpressions.
                                    \n NOTE: \tA MatchAnnotations is internally converted
                                    to MatchAnnotationExpressions \n For example following
                                    matches are same: \n \tmatchAnnotations:    app:
                                    metac \n  matchAnnotationExpressions:  - key:
                                    app    operator: In    values: [\"metac\"] \n
                                    MatchAnnotations is converted into a list of LabelSelectorRequirement
                                    that are AND-ed to determine if the selector matches
                                    its target or not. \n NOTE: \tPresence of key
                                    as well value in the target's **annotations**
                                    is considered as a successful match. \n This is
                                    optional"
                                  type: object
                                matchFieldExpressions:
                                  description: "MatchFieldExpressions is a list of
                                    field selector requirements. The requirements
                                    are AND-ed. \n This is optional"
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  additionalProperties:
                                    type: string
                                  description: "MatchFields is a map i.e. key value
                                    pairs based field selector. \n A single {key,
                                    value} pair in the MatchFields map is equivalent
                                    to one element in MatchFieldExpressions. \n NOTE:
                                    \tA MatchFields is internally converted to MatchFieldExpressions
                                    \n For example following matches are same: \n
                                    \tmatchFields:    metadata.uid: \"uid-101\"    metadata.name:
                                    \"abc\" \n  matchFieldExpressions:  - key: metadata.uid
                                    \   operator: In    values: [\"uid-101\"]  - key:
                                    metadata.name    operator: In    values: [\"abc\"]
                                    \n A key should represent the nested field path
                                    separated by dot(s) e.g. 'status.phase' \n NOTE:
                                    \tValues at these field paths should be of **string**
                                    type. \n A MatchFields is converted into a list
                                    of LabelSelectorRequirement that are AND-ed to
                                    determine if the selector matches its target or
                                    not. \n This is optional"
                                  type: object
                                matchLabelExpressions:
                                  description: "MatchLabelExpressions is a list of
                                    label selector requirements. The requirements
                                    are ANDed. \n This is optional"
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: "MatchLabels is a map of {key,value}
                                    pairs that is matched against the target's labels.
                                    \n A single {key, value} pair in the MatchLabels
                                    map is equivalent to one element in MatchLabelExpressions.
                                    \n NOTE: \tA MatchLabels is internally converted
                                    to MatchLabelExpressions \n For example following
                                    matches are same: \n  matchLabels:    app: metac
                                    \n  matchLabelExpressions:  - key: app    operator:
                                    In    values: [\"metac\"] \n MatchLabels is converted
                                    into a list of LabelSelectorRequirement that are
                                    AND-ed to determine if the selector matches its
                                    target or not. \n NOTE: \tPresence of key as well
                                    value in the target's **labels** is considered
                                    as a successful match. \n This is optional"
                                  type: object
                                matchReference:
                                  description: "MatchReference is a list of keys where
                                    each key holds the path to a nested field present
                                    in both target resource as well as the reference
                                    resource. \n NOTE: \tA target is as an attachment
                                    resource whereas a reference is the watch resource
                                    when used in the context of MetaController. \n
                                    A single item in the MatchReference list is equivalent
                                    to one element in MatchReferenceExpressions. \n
                                    NOTE: \tA MatchReference is internally converted
                                    to MatchReferenceExpressions. \n For example following
                                    matches are same: \n \tmatchReference: [\"metadata.uid\",
                                    \"metadata.name\"] \n  matchReferenceExpressions:
                                    \ - key: metadata.uid    operator: Equals  - key:
                                    metadata.name    operator: Equals \n A key should
                                    represent the nested field path separated by dot(s)
                                    e.g. 'status.phase' \n NOTE: \tValues at these
                                    field paths should be of **string** type. \n A
                                    MatchReference is converted into a list of LabelSelectorRequirement
                                    that are AND-ed to determine if the selector marks
                                    its target _(read attachment)_ as a match or no
                                    match. \n NOTE: \tThis tries to match the target
                                    _(i.e. attachment object)_ based on reference
                                    _(i.e. watch object)_. A match is successful if
                                    values extracted from these objects match. \n
                                    This is optional"
                                  items:
                                    type: string
                                  type: array
                                matchReferenceExpressions:
                                  description: "MatchReferenceExpressions is a list
                                    of field selector requirements. The requirements
                                    are AND-ed. \n This is optional"
                                  items:
                                    description: "ReferenceSelectorRequirement contains
                                      a key and an operator. Operator performs match
                                      related operations against key and corresponding
                                      values. Values are derived from the target object
                                      and the reference object. \n NOTE: \tTarget
                                      refers to any arbitrary resource instance whereas
                                      reference resource refers to the parent / watch
                                      resource in various meta controllers."
                                    properties:
                                      key:
                                        description: "Key is the **target**'s nested
                                          path that the selector applies against.
                                          The nested path is separated by dot(s).
                                          E.g. 'metadata.namespace', 'metadata.name',
                                          'status.phase', etc. \n NOTE: \tA target
                                          object refers to an attachment in MetaController's
                                          terminology"
                                        type: string
                                      operator:
                                        description: "Operator represents the operation
                                          that will be undertaken between the values
                                          extracted from target & reference. Both
                                          these values will be found at respective
                                          path declared in the key. \n NOTE: \tValue
                                          at these field paths should be of string
                                          type."
                                        type: string
                                      refKey:
                                        description: "RefKey is the **reference**'s
                                          nested path that the selector applies against.
                                          This field is optional. \n NOTE: \tA reference
                                          object refers to a watch in MetaController's
                                          terminology \n NOTE: \tWhen set, the Operator
                                          field becomes optional since Operator is
                                          set to Equals."
                                        type: string
                                    required:
                                    - key
                                    type: object
                                  type: array
                                matchSlice:
                                  additionalProperties:
                                    items:
                                      type: string
                                    type: array
                                  description: "MatchSlice is a map i.e. key value
                                    pairs based slice selector. \n A single {key,value}
                                    pair in the MatchSlice map is equivalent to one
                                    element in MatchSliceExpressions. \n NOTE: \tA
                                    MatchFields is internally converted to MatchFieldExpressions
                                    \n For example following matches are same: \n
                                    \ matchSlice:    metadata.finalizers: [\"protect-101\",
                                    \"protect-102\"] \n  matchSliceExpressions:  -
                                    key: metadata.finalizers    operator: In    values:
                                    \   - protect-101    - protect-102 \n A key should
                                    represent the nested field path separated by dot(s)
                                    e.g. 'spec.items' \n NOTE: \tValues at these field
                                    paths should be of **[]string** type. \n A MatchSlice
                                    is converted into a list of SliceSelectorRequirement
                                    that are AND-ed to determine if the selector matches
                                    its **target** or not. \n This is optional"
                                  type: object
                                matchSliceExpressions:
                                  description: "MatchSliceExpressions is a list of
                                    slice selector requirements. These requirements
                                    are AND-ed to determine if the selector matches
                                    its target or not. \n This is optional"
                                  items:
                                    description: "SliceSelectorRequirement contains
                                      values, a key, and an operator that relates
                                      the key and values. The zero value of Requirement
                                      is invalid. \n NOTE: \tRequirement implements
                                      both set based match and exact match. \n NOTE:
                                      \tRequirement should be initialized via appropriate
                                      constructors for creating a valid SliceSelectorRequirement."
                                    properties:
                                      key:
                                        description: Key is the target's nested path
                                          that the selector applies to
                                        type: string
                                      operator:
                                        description: Operator represents the key's
                                          relationship to a set of values
                                        type: string
                                      values:
                                        description: Values is an array of string
                                          values corresponding to the key
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    - values
                                    type: object
                                  type: array
                              type: object
                            type: array
                        type: object
                    required:
                    - state
                    type: object
                  assert:
                    description: Assert handles assertion of desired state against
                      the observed state found in the cluster
                    properties:
                      pathCheck:
                        description: PathCheck has assertions related to resource
                          paths
                        properties:
                          dataType:
                            description: Data type of the value e.g. int64 or float64
                              etc
                            type: string
                          path:
                            description: "Nested path of the field found in the resource
                              \n NOTE: \tThis is a mandatory field"
                            type: string
                          pathCheckOperator:
                            description: Check operation performed between the expected
                              field value and the field value of the observed resource
                              found in the cluster
                            type: string
                          value:
                            description: Expected value that gets verified against
                              the observed value based on the path & operator
                        required:
                        - path
                        type: object
                      state:
                        description: Desired state(s) that is asserted against the
                          observed state(s)
                        type: object
                      stateCheck:
                        description: StateCheck has assertions related to state of
                          resources
                        properties:
                          count:
                            description: Count defines the expected number of observed
                              states
                            type: integer
                          stateCheckOperator:
                            description: Check operation performed between the expected
                              state and the observed state
                            type: string
                        type: object
                    required:
                    - state
                    type: object
                  create:
                    description: Create creates the state found in the cluster
                    properties:
                      replicas:
                        description: Desired count that needs to be created
                        type: integer
                      state:
                        description: Desired state that needs to be created
                        type: object
                    required:
                    - state
                    type: object
                  delete:
                    description: Delete deletes the state found in the cluster
                    properties:
                      state:
                        description: Desired state that needs to be deleted
                        type: object
                    required:
                    - state
                    type: object
                  failFast:
                    description: FailFast holds the condition that determines if an
                      error should not result in retries and instead be allowed to
                      fail immediately
                    properties:
                      when:
                        description: FailFastRule defines the condition that leads
                          to fail fast
                        type: string
                    type: object
                  ignoreError:
                    description: IgnoreErrorRule defines the rule to ignore an error
                    type: string
                  name:
                    type: string
                required:
                - name
                type: object
              type: array
            teardown:
              type: boolean
            thinkTimeInSeconds: {}
          required:
          - tasks
          type: object
        status:
          description: JobStatus holds the results of all tasks specified in a Job
          properties:
            failedTaskCount:
              type: integer
            message:
              type: string
            phase:
              description: JobStatusPhase is a typed definition to determine the result
                of executing a Job
              type: string
            reason:
              type: string
            taskCount:
              type: integer
            taskListStatus:
              additionalProperties:
                description: TaskStatus holds task execution details
                properties:
                  elapsedTimeInSeconds: {}
                  internal:
                    type: boolean
                  message:
                    type: string
                  phase:
                    description: TaskStatusPhase defines the task execution status
                    type: string
                  step:
                    type: integer
                  timeout:
                    type: string
                  verbose:
                    type: string
                  warning:
                    type: string
                required:
                - phase
                - step
                type: object
              type: object
          required:
          - failedTaskCount
          - phase
          - taskCount
          - taskListStatus
          type: object
      required:
      - metadata
      - spec
      - status
      type: object
  version: types
  versions:
  - name: types
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
